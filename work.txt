


gwt interview practice

Event Handler Interfaces


Create Custom Widget with Composite Class

 implements EntryPoint
 
 https://www.tutorialspoint.com/gwt/gwt_custom_widget.htm




class Node:
    pass


root = Node()
root.data = 1
root.left = Node()
root.right = Node()

root.left.data = 2
root.left.left = Node()
root.left.right = Node()

root.right.data = 3
root.right.left = Node()
root.right.right = Node()

node2 = root.left
node2.left.data = 4
node2.right.data = 5

node3 = root.right
node3.left.data = 6
node3.right.data = 7

queue = []

def printTree(rootNode, queue):
    if rootNode.data is not None:
        print(rootNode.data)

    if len(queue) > 0:
        t = queue[len(queue)-1]
        queue.remove([len(queue)-1])
        printTree(t, queue)

    if rootNode is not None and hasattr(rootNode, "left"):
        queue.append(rootNode.right)
        printTree(rootNode.left, queue)





printTree(root)

# print(root.data)


from os import listdir
from os.path import isfile, join
import re

mypath = "C:/Users/rathomoh/temp/site"
files = [f for f in listdir(mypath) if isfile(join(mypath, f))]
dirs = [f for f in listdir(mypath) if not isfile(join(mypath, f))]

print(files)
print(dirs)

for file in files:
    with open(mypath + '/' + file, 'r') as content_file:
        content = content_file.read()
        # print(content)
        pattern = '/#(*.)'
        m = re.findall(pattern, content)
        # print()





 
